---
export const prerender = false;

import { getCollection, type CollectionEntry, } from "astro:content";
import type { ComponentProps } from "astro/types";

import {GridGeneral} from './GridGeneral'

import {delay} from 'nanodelay';

//import { DisplayGrid} from './display-grid';


import {
  AscendingLevels,
  type BuffParamsType,
  ClassEnum,
  type ClassEnumType,
  qualityColor,
 } from "@schemas/baseSchemas";

 import {
  GeneralElement,
  type GeneralClassType,
  type GeneralElementType,
 } from '@schemas/generalsSchema'

 import { 
  type ExtendedGeneralType,
  ExtendedGeneralStatus,
  type GeneralPairType,
  } from "@schemas/ExtendedGeneral";

const DEBUG = false;

interface Props {
  generalClass: ClassEnumType
}

const {generalClass} = Astro.props;

//const table_name = `${Astro.url.pathname}-${ulid()}`

let allGenerals = new Array<GeneralElementType>();

//while no general can *have* both, I can evaluate generals assuming I will give them whichever that particular one needs.
let MyInvestmentLevel: BuffParamsType = {
  special1: qualityColor.enum.Gold,
  special2: qualityColor.enum.Gold,
  special3: qualityColor.enum.Gold,
  special4: qualityColor.enum.Gold,
  special5: qualityColor.enum.Disabled,
  stars: AscendingLevels.enum[10],
  dragon: true,
  beast: true,
};

  



---

<div class="table-container">
  <!-- <DisplayGrid
    tableName={table_name}
    InvestmentLevel={MyInvestmentLevel}
    DisplayPairs={Astro.locals.CachedPairs}
    client:only="lit"
  >

  </DisplayGrid> -->
  
<style>
  .table-container {
    display: block;
    flex: 2 0 auto;
    
  }
</style>
