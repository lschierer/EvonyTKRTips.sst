---
import {getCollection} from "astro:content";
import { LinkCard, CardGrid } from '@astrojs/starlight/components';
import type { HTMLAttributes } from 'astro/types'


const {slug} = Astro.params;
const { dir } = Astro.props;

let count2 = 0;
const allPages = await getCollection('docs');
let searchPages = allPages.filter((p) => {
  if(dir !== null && dir !== undefined) {
    //using undefined because I do not know how to get the actual locale for the browser reliably.
    if(p.slug.localeCompare(dir,undefined, {sensitivity: 'base'})) {
      return p.id.toLocaleLowerCase().startsWith(dir);
    }
  } else { //default to using the current directory
    //using undefined because I do not know how to get the actual locale for the browser reliably.
    if(p.slug.localeCompare(slug,undefined, {sensitivity: 'base'})) {
      return p.id.toLocaleLowerCase().startsWith(slug);
    }
  }
  count2++;
  return false;
})

searchPages = searchPages.sort((a,b) => {
  if(a.data.sidebar.order && b.data.sidebar.order) {
    return a.data.sidebar.order - b.data.sidebar.order;
  } else if (a.data.sidebar.order) {
    return 0 - a.data.sidebar.order;
  } else if (b.data.sidebar.order) {
    return b.data.sidebar.order - 0
  } else {
    return (a.data.title.localeCompare(b.data.title, undefined, {sensitivity: 'base'}))
  }
})

const count = searchPages.length
const test = ["one", "two", "three"]

---
<!--
count is {count}<br/>
count2 is {count2}<br/>
slug is {slug}<br/>
-->

<CardGrid stagger>
  { searchPages.map((p) => (
    <LinkCard href={'/'.concat(p.slug)} title={p.data.title} description={p.data.description}/>
  ))}
</CardGrid>
