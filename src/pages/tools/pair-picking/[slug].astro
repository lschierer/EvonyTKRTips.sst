---
export const prerender = false;

import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';

import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';


import AllGenerals from '@components/general/AllGenerals.astro';
import AllConflicts from '@components/general/AllConflicts.astro';

import {
  generalSpecialists,

  type generalSpecialistsType
} from '../../../schemas/generalsSchema';

const DEBUG = true;

const { Specialist } = Astro.params;

if(DEBUG) {
  console.log(`Specialist is ${Specialist}`);
}

if(Specialist !== null && Specialist !== undefined) {
  if(DEBUG) {
    console.log(`Specialist ${Specialist} not found`)
    throw new Error('Specialist is required');
  } else {
    return Astro.redirect('/404');
  }
}
const entry = await getEntry('tools', `pair-picking/${Specialist!.toLocaleString().toLocaleLowerCase()}/`);

if(entry === undefined || entry === null) {
  if(DEBUG) {
    console.log(`Specialist ${Specialist} not found`)
    throw new Error('Specialist is required');
  } else {
    return Astro.redirect('/404');
  }
}

const { Content, headings } = await entry.render();

let TargetClass: generalSpecialistsType;
if(Specialist !== undefined && Specialist !== null) {
  if(!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Archers.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Archers;
  } else if (!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Mounted.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Mounted;
  } else if (!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Monsters.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Mounted;
  } else if (! Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Ground.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Ground;
  } else if (!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Siege.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Siege
  } else if (!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Wall.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Wall;
  } else if (!Specialist.toLocaleLowerCase().localeCompare(generalSpecialists.enum.Mayor.toLocaleLowerCase())) {
    TargetClass = generalSpecialists.enum.Mayor;
  } else {
    TargetClass = undefined;
  }
} else {
  TargetClass = undefined;
}

if(DEBUG) {
  console.log(`Specialist.astro Specialist ${Specialist} became TargetClass ${TargetClass}`)
}

---

<StarlightPage
  frontmatter={{
    title: entry.data.title,
    lastUpdated: entry.data.lastUpdated,
    tableOfContents: entry.data.tableOfContents,
  }}
>
  {(DEBUG && !prerender) && `Dynamic Template`}
  {(DEBUG && prerender) && `Static Template`}

  {(TargetClass !== undefined) ? (<AllGenerals TargetClass={TargetClass} />) :
    (<AllGenerals />)}
  <AllConflicts />
  <Content />
</StarlightPage>
