---
import { Astro } from '../../../../.sst/platform/src/components/aws';
export const prerender = true;
import type { ComponentProps } from 'astro/types';
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from 'astro';

import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { DetailView } from '@components/general/DetailView.ts';
import AllGenerals from '@components/general/AllGenerals.astro';
import AllConflicts from '@components/general/AllConflicts.astro';

const DEBUG = true;

import { getEntry, getCollection } from 'astro:content';
import { ExtendedGeneralType } from '../../../schemas/ExtendedGeneral';

export const getStaticPaths = (async () => {
  const generalEntries = await getCollection('generals');
  return generalEntries.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { id }: Params = Astro.params;
if (id === undefined) {
  if (DEBUG) console.log(`id was undefined`);
  throw new Error('Id is required');
}

---
<StarlightPage
  frontmatter={{ title: `Details for ${id}`, tableOfContents: false }}
>
  <DetailView generalId={id} client:only="lit" />
  <slot />
</StarlightPage>
