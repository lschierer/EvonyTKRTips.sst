//import { zod.number, zod.object, zod.output, zod.record } from "astro:content";

import {z as zod} from 'zod';

import {
    ActivationSituations
} from './baseSchemas'

// This file is generated by runtyping (https://github.com/johngeorgewright/runtyping).
// Manual changes might be lost - proceed with caution!
export const ScoreWeightings = zod.record(
  ActivationSituations,
  zod.object({
    GroundOffense: zod.number(),
    GroundToughness: zod.number(),
    RangedOffense: zod.number(),
    RangedToughness: zod.number(),
    MountedOffense: zod.number(),
    MountedToughness: zod.number(),
    SiegeOffense: zod.number(),
    SiegeToughness: zod.number(),
    EnemyDebuffs: zod.number(),
    default: zod.number(),
  })
);

export type ScoreWeightings = zod.output<typeof ScoreWeightings>;

export const PvPAttributeMultipliers = zod.object({
    Offensive: zod.object({
      AllTroopAttack: zod.number(),
      GroundAttack: zod.number(),
      RangedAttack: zod.number(),
      SiegeAttack: zod.number(),
      MountedAttack: zod.number(),
      InBattleMovementBonus: zod.number(),
      RangedRangeBonus: zod.number(),
      SiegeRangeBonusFlat: zod.number(),
      SiegeRangeBonusPercent: zod.number(),
      MarchSizeIncrease: zod.number(),
      RallyCapacity: zod.number(),
    }),
    Toughness: zod.object({
      AllTroopHP: zod.number(),
      RangedHP: zod.number(),
      MountedHP: zod.number(),
      GroundHP: zod.number(),
      SiegeHP: zod.number(),
      AllTroopDefense: zod.number(),
      RangedDefense: zod.number(),
      MountedDefense: zod.number(),
      SiegeDefense: zod.number(),
      GroundDefense: zod.number(),
    }),
    Preservation: zod.object({
      Death2Wounded: zod.number(),
      Death2WoundedWhenAttacking: zod.number(),
      Death2Souls: zod.number(),
      Death2SoulsinMainCity: zod.number(),
    }),
    AttackingAttackDebuff: zod.object({
      ReduceAllAttack: zod.number(),
      ReduceEnemyMountedAttack: zod.number(),
      ReduceEnemyRangedAttack: zod.number(),
      ReduceEnemySiegeAttack: zod.number(),
      ReduceEnemyGroundAttack: zod.number(),
    }),
    AttackingToughnessDebuff: zod.object({
      ReduceEnemyAllHP: zod.number(),
      ReduceEnemyRangedHP: zod.number(),
      ReduceEnemySiegeHP: zod.number(),
      ReduceEnemyMountedHP: zod.number(),
      ReduceEnemyGroundHP: zod.number(),
      ReduceEnemyAllDefense: zod.number(),
      ReduceEnemyRangedDefense: zod.number(),
      ReduceEnemySiegeDefense: zod.number(),
      ReduceEnemyMountedDefense: zod.number(),
      ReduceEnemyGroundDefense: zod.number(),
    }),
    ReinforcingAttackDebuff: zod.object({
      ReduceAllAttack: zod.number(),
      ReduceEnemyMountedAttack: zod.number(),
      ReduceEnemyRangedAttack: zod.number(),
      ReduceEnemySiegeAttack: zod.number(),
      ReduceEnemyGroundAttack: zod.number(),
    }),
    ReinforcingToughnessDebuff: zod.object({
      ReduceEnemyAllHP: zod.number(),
      ReduceEnemyRangedHP: zod.number(),
      ReduceEnemySiegeHP: zod.number(),
      ReduceEnemyMountedHP: zod.number(),
      ReduceEnemyGroundHP: zod.number(),
      ReduceEnemyAllDefense: zod.number(),
      ReduceEnemyRangedDefense: zod.number(),
      ReduceEnemySiegeDefense: zod.number(),
      ReduceEnemyMountedDefense: zod.number(),
      ReduceEnemyGroundDefense: zod.number(),
    }),
    Debilitation: zod.object({
      Wounded2Death: zod.number(),
      InCityWounded2Death: zod.number(),
      Wounded2DeathWhenAttacking: zod.number(),
    }),
  });

export type PvPAttributeMultipliers = zod.output<
  typeof PvPAttributeMultipliers
>;
